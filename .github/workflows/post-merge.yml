name: Post merge workflow
on:
  push:
    branches:
      - main
      - release/*

env:
  LD_LIBRARY_PATH: /__t/Java_Temurin-Hotspot_jdk/17.0.7-7/x64/lib/server

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: entando/ent-cli-github:v7.2.0
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: registry.hub.docker.com
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Pack the application bundle
        id: pack
        env:
          DOCKER_ORG: entandodemo
        run: |
          versionSuffix=SNAPSHOT
          bash .github/functions/utils.sh setBundleVersion -$versionSuffix
          bash .github/functions/utils.sh setComponentVersions -$versionSuffix
          ent --debug bundle pack --org $DOCKER_ORG --stdout --fail-fast
          ent --debug bundle publish
          version=$(bash .github/functions/utils.sh getBundleImage)
          echo "VERSION=$version" >> $GITHUB_OUTPUT
  sonarqube:
    runs-on: ubuntu-latest
    container:
      image: entando/ent-cli-github:v7.2.0
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        run: |
          versionSuffix=SNAPSHOT
          bash .github/functions/utils.sh setBundleVersion -$versionSuffix
          bash .github/functions/utils.sh setComponentVersions -$versionSuffix
          ent bundle build --all --stdout --fail-fast
          cd microservices/springboot-agenda && mvn sonar:sonar --no-transfer-progress && cd ../..
          cd microfrontends/angular-widget-agenda && ent npm run sonar && cd ../..
          cd microfrontends/react-widget-agenda && ent npm run sonar && cd ../..
          cd microfrontends/vue-widget-agenda && ent npm run sonar && cd ../..
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
